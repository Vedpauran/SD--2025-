{"version":3,"file":"collection.routes.js","names":["express","require","router","Router","Collection","asyncHandler","toggleCollection","req","res","collectionitem","findOne","user","_id","item","body","removecollection","deleteMany","status","json","success","message","collection","type","newCollection","save","err","getCollections","Collections","find","query","route","post","get","module","exports"],"sources":["../../../src/app/routes/collection.routes.js"],"sourcesContent":["const express = require(\"express\");\nconst router = express.Router();\nconst Collection = require(\"../models/users/collections\");\nconst asyncHandler = require(\"../utils/asyncHandler\");\n\nconst toggleCollection = asyncHandler(async (req, res) => {\n\ttry {\n\t\t// Check if the collection item already exists\n\t\tconst collectionitem = await Collection.findOne({\n\t\t\tuser: req.user._id,\n\t\t\titem: req.body.item,\n\t\t});\n\n\t\tif (collectionitem) {\n\t\t\t// If the collection item exists, remove it\n\t\t\tconst removecollection = await Collection.deleteMany({\n\t\t\t\tuser: req.user._id,\n\t\t\t\titem: req.body.item,\n\t\t\t});\n\t\t\tif (removecollection) {\n\t\t\t\treturn res.status(200).json({\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tmessage: \"Item removed from collection\",\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// If the collection item does not exist, create a new one\n\t\t\tconst collection = new Collection({\n\t\t\t\tuser: req.user._id,\n\t\t\t\titem: req.body.item,\n\t\t\t\ttype: req.body.type,\n\t\t\t});\n\t\t\tconst newCollection = await collection.save();\n\t\t\treturn res.status(200).json(newCollection);\n\t\t}\n\t} catch (err) {\n\t\t// Catch any errors\n\t\treturn res.status(400).json({ message: err.message });\n\t}\n});\n\nconst getCollections = asyncHandler(async (req, res) => {\n\ttry {\n\t\tconst Collections = await Collection.find({\n\t\t\tuser: req.user._id,\n\t\t\ttype: req.query.type,\n\t\t});\n\t\tres.status(200).json(Collections);\n\t} catch (err) {\n\t\tres.status(400).json({ message: err.message });\n\t}\n});\n\nrouter.route(\"/\").post(toggleCollection);\nrouter.route(\"/\").get(getCollections);\n\nmodule.exports = router;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,UAAU,GAAGH,OAAO,CAAC,6BAA6B,CAAC;AACzD,MAAMI,YAAY,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAErD,MAAMK,gBAAgB,GAAGD,YAAY,CAAC,OAAOE,GAAG,EAAEC,GAAG,KAAK;EACzD,IAAI;IACH;IACA,MAAMC,cAAc,GAAG,MAAML,UAAU,CAACM,OAAO,CAAC;MAC/CC,IAAI,EAAEJ,GAAG,CAACI,IAAI,CAACC,GAAG;MAClBC,IAAI,EAAEN,GAAG,CAACO,IAAI,CAACD;IAChB,CAAC,CAAC;IAEF,IAAIJ,cAAc,EAAE;MACnB;MACA,MAAMM,gBAAgB,GAAG,MAAMX,UAAU,CAACY,UAAU,CAAC;QACpDL,IAAI,EAAEJ,GAAG,CAACI,IAAI,CAACC,GAAG;QAClBC,IAAI,EAAEN,GAAG,CAACO,IAAI,CAACD;MAChB,CAAC,CAAC;MACF,IAAIE,gBAAgB,EAAE;QACrB,OAAOP,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAC3BC,OAAO,EAAE,IAAI;UACbC,OAAO,EAAE;QACV,CAAC,CAAC;MACH;IACD,CAAC,MAAM;MACN;MACA,MAAMC,UAAU,GAAG,IAAIjB,UAAU,CAAC;QACjCO,IAAI,EAAEJ,GAAG,CAACI,IAAI,CAACC,GAAG;QAClBC,IAAI,EAAEN,GAAG,CAACO,IAAI,CAACD,IAAI;QACnBS,IAAI,EAAEf,GAAG,CAACO,IAAI,CAACQ;MAChB,CAAC,CAAC;MACF,MAAMC,aAAa,GAAG,MAAMF,UAAU,CAACG,IAAI,CAAC,CAAC;MAC7C,OAAOhB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACK,aAAa,CAAC;IAC3C;EACD,CAAC,CAAC,OAAOE,GAAG,EAAE;IACb;IACA,OAAOjB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,OAAO,EAAEK,GAAG,CAACL;IAAQ,CAAC,CAAC;EACtD;AACD,CAAC,CAAC;AAEF,MAAMM,cAAc,GAAGrB,YAAY,CAAC,OAAOE,GAAG,EAAEC,GAAG,KAAK;EACvD,IAAI;IACH,MAAMmB,WAAW,GAAG,MAAMvB,UAAU,CAACwB,IAAI,CAAC;MACzCjB,IAAI,EAAEJ,GAAG,CAACI,IAAI,CAACC,GAAG;MAClBU,IAAI,EAAEf,GAAG,CAACsB,KAAK,CAACP;IACjB,CAAC,CAAC;IACFd,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACS,WAAW,CAAC;EAClC,CAAC,CAAC,OAAOF,GAAG,EAAE;IACbjB,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEE,OAAO,EAAEK,GAAG,CAACL;IAAQ,CAAC,CAAC;EAC/C;AACD,CAAC,CAAC;AAEFlB,MAAM,CAAC4B,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAACzB,gBAAgB,CAAC;AACxCJ,MAAM,CAAC4B,KAAK,CAAC,GAAG,CAAC,CAACE,GAAG,CAACN,cAAc,CAAC;AAErCO,MAAM,CAACC,OAAO,GAAGhC,MAAM","ignoreList":[]}