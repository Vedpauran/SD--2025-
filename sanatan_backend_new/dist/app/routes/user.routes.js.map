{"version":3,"file":"user.routes.js","names":["User","require","express","router","Router","multer","path","verifyJWT","ApiError","ApiResponse","asyncHandler","OAuth2Client","nodemailer","client","post","req","res","idToken","body","ticket","verifyIdToken","audience","payload","getPayload","user","findOne","email","accessToken","refreshToken","generateAccessAndRefereshTokens","_id","loggedInUser","findById","select","options","httpOnly","secure","status","cookie","json","error","console","message","storage","diskStorage","destination","file","cb","filename","Date","now","originalname","upload","userId","generateAccessToken","generateRefreshToken","save","validateBeforeSave","transporter","createTransport","service","host","port","auth","process","env","EMAIL_USER","pass","EMAIL_PASSWORD","sendOtp","otp","Math","floor","random","toString","otpExpires","mailOptions","from","to","subject","text","sendMail","send","verifyOtp","registerUser","fullName","username","phone","password","some","field","trim","existedUser","$or","existedUsername","newUsername","toLowerCase","randomNumber","userCount","countDocuments","create","userPic","gender","createdUser","loginUser","log","isPasswordValid","isPasswordCorrect","logoutUser","findByIdAndUpdate","$unset","new","clearCookie","refreshAccessToken","incomingRefreshToken","cookies","decodedToken","jwt","verify","REFRESH_TOKEN_SECRET","newRefreshToken","changeCurrentPassword","oldPassword","newPassword","getCurrentUser","updateAccountDetails","$set","updateUserAvatar","LocalPath","userpic","route","get","patch","single","module","exports"],"sources":["../../../src/app/routes/user.routes.js"],"sourcesContent":["const User = require(\"../models/users/users\");\nconst express = require(\"express\");\nconst router = express.Router();\nconst multer = require(\"multer\");\nconst path = require(\"path\");\nconst verifyJWT = require(\"../middleware/verifyjwt\");\nconst ApiError = require(\"../utils/apierror\");\nconst ApiResponse = require(\"../utils/apiresponse\");\nconst asyncHandler = require(\"../utils/asyncHandler\");\nconst { OAuth2Client } = require(\"google-auth-library\");\nconst nodemailer = require(\"nodemailer\");\nconst client = new OAuth2Client(\n\t\"618397698961-n0n3qpaom7ehd9lc2na4bd10d6qh8sfv.apps.googleusercontent.com\"\n);\n\n// Verify Google ID Token and create or fetch user\nrouter.post(\n\t\"/login/google\",\n\tasyncHandler(async (req, res) => {\n\t\tconst { idToken } = req.body;\n\n\t\ttry {\n\t\t\tconst ticket = await client.verifyIdToken({\n\t\t\t\tidToken: idToken,\n\t\t\t\taudience:\n\t\t\t\t\t\"618397698961-n0n3qpaom7ehd9lc2na4bd10d6qh8sfv.apps.googleusercontent.com\",\n\t\t\t});\n\t\t\tconst payload = ticket.getPayload();\n\n\t\t\t// Fetch or create user in your database\n\t\t\tlet user = await User.findOne({ email: payload.email });\n\t\t\tif (!user) {\n\t\t\t\tthrow new ApiError(404, \"User does not exist\");\n\t\t\t}\n\t\t\tconst { accessToken, refreshToken } =\n\t\t\t\tawait generateAccessAndRefereshTokens(user._id);\n\n\t\t\tconst loggedInUser = await User.findById(user._id).select(\n\t\t\t\t\"-password -refreshToken\"\n\t\t\t);\n\n\t\t\tconst options = {\n\t\t\t\thttpOnly: true,\n\t\t\t\tsecure: true,\n\t\t\t};\n\n\t\t\treturn res\n\t\t\t\t.status(200)\n\t\t\t\t.cookie(\"accessToken\", accessToken, options)\n\t\t\t\t.cookie(\"refreshToken\", refreshToken, options)\n\t\t\t\t.json(\n\t\t\t\t\tnew ApiResponse(\n\t\t\t\t\t\t200,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tuser: loggedInUser,\n\t\t\t\t\t\t\taccessToken,\n\t\t\t\t\t\t\trefreshToken,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"User logged In Successfully\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error during Google authentication:\", error);\n\t\t\tres.status(403).json({ message: \"Authentication failed\" });\n\t\t}\n\t})\n);\n\nconst storage = multer.diskStorage({\n\tdestination: function (req, file, cb) {\n\t\tcb(null, \"./files/user\");\n\t},\n\tfilename: function (req, file, cb) {\n\t\tcb(null, Date.now() + \"-\" + file.originalname);\n\t},\n});\nconst upload = multer({ storage: storage });\n\nconst generateAccessAndRefereshTokens = async (userId) => {\n\ttry {\n\t\tconst user = await User.findById(userId);\n\t\tconst accessToken = user.generateAccessToken();\n\t\tconst refreshToken = user.generateRefreshToken();\n\n\t\tuser.refreshToken = refreshToken;\n\t\tawait user.save({ validateBeforeSave: false });\n\n\t\treturn { accessToken, refreshToken };\n\t} catch (error) {\n\t\tthrow new ApiError(\n\t\t\t500,\n\t\t\t\"Something went wrong while generating referesh and access token\"\n\t\t);\n\t}\n};\n\nconst transporter = nodemailer.createTransport({\n\tservice: \"Gmail\",\n\thost: \"smtp.gmail.com\",\n\tport: 465,\n\tsecure: true,\n\tauth: {\n\t\tuser: process.env.EMAIL_USER,\n\t\tpass: process.env.EMAIL_PASSWORD,\n\t},\n});\n\n// Generate OTP and send email\nconst sendOtp = asyncHandler(async (req, res) => {\n\tconst { email } = req.body;\n\tconst otp = Math.floor(100000 + Math.random() * 900000).toString(); // 6-digit OTP\n\tconst otpExpires = new Date(Date.now() + 15 * 60000); // OTP valid for 15 minutes\n\n\ttry {\n\t\tlet user = await User.findOne({ email });\n\t\tif (!user) {\n\t\t\tuser = new User({ email, otp, otpExpires });\n\t\t} else {\n\t\t\tuser.otp = otp;\n\t\t\tuser.otpExpires = otpExpires;\n\t\t}\n\t\tawait user.save();\n\n\t\tconst mailOptions = {\n\t\t\tfrom: process.env.EMAIL_USER,\n\t\t\tto: email,\n\t\t\tsubject: \"Here is your OTP\",\n\t\t\ttext: `Your OTP code is ${otp}. It is valid only for 15 minutes. -Sanatan Dharmaya`,\n\t\t};\n\n\t\tawait transporter.sendMail(mailOptions);\n\t\tres.status(200).send(\"OTP sent to your email.\");\n\t} catch (error) {\n\t\tres.status(500).send(\"Error sending OTP.\");\n\t}\n});\n\n// Verify OTP and generate JWT\nconst verifyOtp = asyncHandler(async (req, res) => {\n\tconst { email, otp } = req.body;\n\n\ttry {\n\t\tconst user = await User.findOne({ email });\n\n\t\tif (!user || user.otp !== otp) {\n\t\t\treturn res.status(400).send(\"Invalid OTP!!\");\n\t\t}\n\n\t\tif (new Date() > user.otpExpires) {\n\t\t\treturn res.status(400).send(\"OTP has expired.\");\n\t\t}\n\n\t\tconst { accessToken, refreshToken } =\n\t\t\tawait generateAccessAndRefereshTokens(user._id);\n\n\t\tconst loggedInUser = await User.findById(user._id).select(\n\t\t\t\"-password -refreshToken\"\n\t\t);\n\n\t\tconst options = {\n\t\t\thttpOnly: true,\n\t\t\tsecure: true,\n\t\t};\n\n\t\treturn res\n\t\t\t.status(200)\n\t\t\t.cookie(\"accessToken\", accessToken, options)\n\t\t\t.cookie(\"refreshToken\", refreshToken, options)\n\t\t\t.json(\n\t\t\t\tnew ApiResponse(\n\t\t\t\t\t200,\n\t\t\t\t\t{\n\t\t\t\t\t\tuser: loggedInUser,\n\t\t\t\t\t\taccessToken,\n\t\t\t\t\t\trefreshToken,\n\t\t\t\t\t},\n\t\t\t\t\t\"OTP Verification Success\"\n\t\t\t\t)\n\t\t\t);\n\t} catch (error) {\n\t\tres.status(500).send(\"Error verifying OTP.\");\n\t}\n});\n\nconst registerUser = asyncHandler(async (req, res) => {\n\tconst { fullName, email, username, phone, password } = req.body;\n\t//console.log(\"email: \", email);\n\n\tif (\n\t\t[fullName, email, username, password, phone].some(\n\t\t\t(field) => field?.trim() === \"\"\n\t\t)\n\t) {\n\t\tthrow new ApiError(400, \"All fields are required\");\n\t}\n\n\tconst existedUser = await User.findOne({\n\t\t$or: [{ email }, { phone }],\n\t});\n\n\tif (existedUser) {\n\t\tthrow new ApiError(409, \"User already exists\");\n\t}\n\t//console.log(req.files);\n\tconst existedUsername = await User.findOne({\n\t\tusername,\n\t});\n\n\tif (existedUsername) {\n\t\tconst newUsername = `${username.toLowerCase()}-${randomNumber}`;\n\t\tconst userCount = await User.countDocuments();\n\t\tconst randomNumber = userCount + 1;\n\t\tconst user = await User.create({\n\t\t\tfullName: fullName,\n\t\t\tuserPic: \"\",\n\t\t\tuserId: `SD${randomNumber}`,\n\t\t\temail: email,\n\t\t\tphone: phone,\n\t\t\tpassword: password,\n\t\t\tusername: newUsername.toString(),\n\t\t\tgender: \"\",\n\t\t});\n\t\tconst createdUser = await User.findById(user._id).select(\n\t\t\t\"-password -refreshToken\"\n\t\t);\n\n\t\tif (!createdUser) {\n\t\t\tthrow new ApiError(\n\t\t\t\t500,\n\t\t\t\t\"Something went wrong while registering the user\"\n\t\t\t);\n\t\t}\n\n\t\treturn res\n\t\t\t.status(200)\n\t\t\t.json(\n\t\t\t\tnew ApiResponse(\n\t\t\t\t\t200,\n\t\t\t\t\tcreatedUser,\n\t\t\t\t\t\"User registered Successfully\"\n\t\t\t\t)\n\t\t\t);\n\t}\n\tconst randomNumber = Math.floor(1000 + Math.random() * 90000);\n\tconst user = await User.create({\n\t\tfullName: fullName,\n\t\tuserPic: \"\",\n\t\tuserId: `SD${randomNumber}`,\n\t\temail: email,\n\t\tphone: phone,\n\t\tpassword: password,\n\t\tusername: username,\n\t\tgender: \"\",\n\t});\n\n\tconst createdUser = await User.findById(user._id).select(\n\t\t\"-password -refreshToken\"\n\t);\n\n\tif (!createdUser) {\n\t\tthrow new ApiError(\n\t\t\t500,\n\t\t\t\"Something went wrong while registering the user\"\n\t\t);\n\t}\n\n\treturn res\n\t\t.status(200)\n\t\t.json(\n\t\t\tnew ApiResponse(\n\t\t\t\t200,\n\t\t\t\tcreatedUser,\n\t\t\t\t\"User registered Successfully\"\n\t\t\t)\n\t\t);\n});\n\nconst loginUser = asyncHandler(async (req, res) => {\n\tconst { email, username, password } = req.body;\n\tconsole.log(email);\n\n\tif (!username && !email) {\n\t\tthrow new ApiError(400, \"username or email is required\");\n\t}\n\tconst user = await User.findOne({\n\t\t$or: [{ username }, { email }],\n\t});\n\n\tif (!user) {\n\t\tthrow new ApiError(404, \"User does not exist\");\n\t}\n\n\tconst isPasswordValid = await user.isPasswordCorrect(password);\n\n\tif (!isPasswordValid) {\n\t\tthrow new ApiError(401, \"Invalid user credentials\");\n\t}\n\n\tconst { accessToken, refreshToken } =\n\t\tawait generateAccessAndRefereshTokens(user._id);\n\n\tconst loggedInUser = await User.findById(user._id).select(\n\t\t\"-password -refreshToken\"\n\t);\n\n\tconst options = {\n\t\thttpOnly: true,\n\t\tsecure: true,\n\t};\n\n\treturn res\n\t\t.status(200)\n\t\t.cookie(\"accessToken\", accessToken, options)\n\t\t.cookie(\"refreshToken\", refreshToken, options)\n\t\t.json(\n\t\t\tnew ApiResponse(\n\t\t\t\t200,\n\t\t\t\t{\n\t\t\t\t\tuser: loggedInUser,\n\t\t\t\t\taccessToken,\n\t\t\t\t\trefreshToken,\n\t\t\t\t},\n\t\t\t\t\"User logged In Successfully\"\n\t\t\t)\n\t\t);\n});\n\nconst logoutUser = asyncHandler(async (req, res) => {\n\tawait User.findByIdAndUpdate(\n\t\treq.user._id,\n\t\t{\n\t\t\t$unset: {\n\t\t\t\trefreshToken: 1, // this removes the field from document\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tnew: true,\n\t\t}\n\t);\n\n\tconst options = {\n\t\thttpOnly: true,\n\t\tsecure: true,\n\t};\n\n\treturn res\n\t\t.status(200)\n\t\t.clearCookie(\"accessToken\", options)\n\t\t.clearCookie(\"refreshToken\", options)\n\t\t.json(new ApiResponse(200, {}, \"User logged Out\"));\n});\n\nconst refreshAccessToken = asyncHandler(async (req, res) => {\n\tconst incomingRefreshToken =\n\t\treq.cookies.refreshToken || req.body.refreshToken;\n\n\tif (!incomingRefreshToken) {\n\t\tthrow new ApiError(401, \"unauthorized request\");\n\t}\n\n\ttry {\n\t\tconst decodedToken = jwt.verify(\n\t\t\tincomingRefreshToken,\n\t\t\tprocess.env.REFRESH_TOKEN_SECRET\n\t\t);\n\n\t\tconst user = await User.findById(decodedToken?._id);\n\n\t\tif (!user) {\n\t\t\tthrow new ApiError(401, \"Invalid refresh token\");\n\t\t}\n\n\t\tif (incomingRefreshToken !== user?.refreshToken) {\n\t\t\tthrow new ApiError(401, \"Refresh token is expired or used\");\n\t\t}\n\n\t\tconst options = {\n\t\t\thttpOnly: true,\n\t\t\tsecure: true,\n\t\t};\n\n\t\tconst { accessToken, newRefreshToken } =\n\t\t\tawait generateAccessAndRefereshTokens(user._id);\n\n\t\treturn res\n\t\t\t.status(200)\n\t\t\t.cookie(\"accessToken\", accessToken, options)\n\t\t\t.cookie(\"refreshToken\", newRefreshToken, options)\n\t\t\t.json(\n\t\t\t\tnew ApiResponse(\n\t\t\t\t\t200,\n\t\t\t\t\t{ accessToken, refreshToken: newRefreshToken },\n\t\t\t\t\t\"Access token refreshed\"\n\t\t\t\t)\n\t\t\t);\n\t} catch (error) {\n\t\tthrow new ApiError(\n\t\t\t401,\n\t\t\terror?.message || \"Invalid refresh token\"\n\t\t);\n\t}\n});\n\nconst changeCurrentPassword = async (req, res) => {\n\tconst { oldPassword, newPassword } = req.body;\n\n\tconst user = await User.findById(req.user?._id);\n\tconst isPasswordCorrect = await user.isPasswordCorrect(oldPassword);\n\n\tif (!isPasswordCorrect) {\n\t\tthrow new ApiError(400, \"Invalid old password\");\n\t}\n\n\tuser.password = newPassword;\n\tawait user.save({ validateBeforeSave: false });\n\n\treturn res\n\t\t.status(200)\n\t\t.json(new ApiResponse(200, {}, \"Password changed successfully\"));\n};\n\nconst getCurrentUser = async (req, res) => {\n\treturn res\n\t\t.status(200)\n\t\t.json(\n\t\t\tnew ApiResponse(200, req.user, \"User fetched successfully\")\n\t\t);\n};\n\nconst updateAccountDetails = async (req, res) => {\n\tconst { email } = req.body;\n\n\tif (!email) {\n\t\tthrow new ApiError(400, \"All fields are required\");\n\t}\n\n\tconst user = await User.findByIdAndUpdate(\n\t\treq.user?._id,\n\t\t{\n\t\t\t$set: {\n\t\t\t\t...req.body,\n\t\t\t},\n\t\t},\n\t\t{ new: true }\n\t).select(\"-password\");\n\n\treturn res\n\t\t.status(200)\n\t\t.json(\n\t\t\tnew ApiResponse(\n\t\t\t\t200,\n\t\t\t\tuser,\n\t\t\t\t\"Account details updated successfully\"\n\t\t\t)\n\t\t);\n};\n\nconst updateUserAvatar = async (req, res) => {\n\tconst LocalPath = req.file?.path;\n\n\tif (!LocalPath) {\n\t\tthrow new ApiError(400, \"file is missing\");\n\t}\n\tconst userpic = LocalPath;\n\n\tif (!userpic) {\n\t\tthrow new ApiError(400, \"Error while uploading\");\n\t}\n\n\tconst user = await User.findByIdAndUpdate(\n\t\treq.user?._id,\n\t\t{\n\t\t\t$set: {\n\t\t\t\tuserPic: userpic,\n\t\t\t},\n\t\t},\n\t\t{ new: true }\n\t).select(\"-password\");\n\n\treturn res\n\t\t.status(200)\n\t\t.json(\n\t\t\tnew ApiResponse(200, user, \"User image updated successfully\")\n\t\t);\n};\n\nrouter.route(\"/register\").post(registerUser);\nrouter.route(\"/send-otp\").post(sendOtp);\nrouter.route(\"/verify-otp\").post(verifyOtp);\n\nrouter.route(\"/login\").post(loginUser);\n//secured routes\nrouter.route(\"/logout\").post(verifyJWT, logoutUser);\nrouter.route(\"/refresh-token\").post(refreshAccessToken);\nrouter\n\t.route(\"/change-password\")\n\t.post(verifyJWT, changeCurrentPassword);\nrouter.route(\"/current-user\").get(verifyJWT, getCurrentUser);\nrouter\n\t.route(\"/update-account\")\n\t.patch(verifyJWT, updateAccountDetails);\nrouter\n\t.route(\"/avatar\")\n\t.patch(verifyJWT, upload.single(\"avatar\"), updateUserAvatar);\n\nmodule.exports = router;\n"],"mappings":"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","ignoreList":[]}