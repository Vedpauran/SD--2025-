{"version":3,"file":"FileUploader.js","names":["express","require","multer","router","Router","File","fs","asyncHandler","storage","diskStorage","destination","req","file","cb","filename","Date","now","originalname","upload","get","res","query","q","page","parseInt","limit","type","filesCount","countDocuments","files","find","name","$regex","$options","sort","createdAt","skip","json","err","status","message","params","post","single","path","size","mimetype","split","newFile","save","delete","findById","id","unlinkSync","findByIdAndDelete","put","newPath","body","newName","renameSync","ids","_id","$in","forEach","deleteMany","module","exports"],"sources":["../../../../src/admin/routes/filemanager/FileUploader.js"],"sourcesContent":["const express = require(\"express\");\nconst multer = require(\"multer\");\nconst router = express.Router();\nconst File = require(\"./Files.model\");\nconst fs = require(\"fs\");\nconst asyncHandler = require(\"../../utils/asyncHandler\");\n\n// Set up multer for file uploads\nconst storage = multer.diskStorage({\n\tdestination: (req, file, cb) => {\n\t\tcb(null, \"uploads/\");\n\t},\n\tfilename: (req, file, cb) => {\n\t\tcb(null, Date.now() + \"-\" + file.originalname);\n\t},\n});\n\nconst upload = multer({ storage: storage });\n\n// Route to get all files with optional query and pagination\nrouter.get(\"/\", async (req, res) => {\n\tconst query = req.query.q || \"\";\n\tconst page = parseInt(req.query.page) || 1;\n\tconst limit = parseInt(req.query.limit) || 10;\n\tconst type = req.query.type || \"\";\n\n\ttry {\n\t\tconst filesCount = await File.countDocuments();\n\t\tconst files = await File.find({\n\t\t\tname: { $regex: query, $options: \"i\" },\n\t\t\ttype: { $regex: type, $options: \"i\" },\n\t\t})\n\t\t\t.sort({ createdAt: -1 })\n\t\t\t.skip((page - 1) * limit)\n\t\t\t.limit(limit);\n\t\tres.json({ files, filesCount });\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n});\n\n// Route to get files filtered by type\nrouter.get(\"/filter/:type\", async (req, res) => {\n\ttry {\n\t\tconst files = await File.find({ type: req.params.type });\n\t\tres.json(files);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n});\n\n// Route to upload a new file\nrouter.post(\n\t\"/upload\",\n\tupload.single(\"file\"),\n\tasyncHandler(async (req, res) => {\n\t\tconst { originalname, path, filename, size } = req.file;\n\t\tconst file = new File({\n\t\t\tname: filename,\n\t\t\tpath: path,\n\t\t\ttype: req.file.mimetype.split(\"/\")[0],\n\t\t\tsize: size,\n\t\t});\n\n\t\ttry {\n\t\t\tconst newFile = await file.save();\n\t\t\tres.status(201).json(newFile);\n\t\t} catch (err) {\n\t\t\tres.status(400).json({ message: err.message });\n\t\t}\n\t})\n);\n\n// Route to delete a file\nrouter.delete(\"/:id\", async (req, res) => {\n\ttry {\n\t\tconst file = await File.findById(req.params.id);\n\t\tif (!file)\n\t\t\treturn res.status(404).json({ message: \"File not found\" });\n\n\t\tfs.unlinkSync(file.path); // Delete file from filesystem\n\n\t\tawait File.findByIdAndDelete(req.params.id);\n\t\tres.json({ message: \"File deleted\" });\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n});\n\n// Route to rename a file\nrouter.put(\"/rename/:id\", async (req, res) => {\n\ttry {\n\t\tconst file = await File.findById(req.params.id);\n\t\tif (!file)\n\t\t\treturn res.status(404).json({ message: \"File not found\" });\n\n\t\tconst newPath = \"uploads/\" + req.body.newName;\n\t\tfs.renameSync(file.path, newPath);\n\n\t\tfile.name = req.body.newName;\n\t\tfile.path = newPath;\n\t\tawait file.save();\n\n\t\tres.json(file);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n});\n\n// Route to bulk delete files\nrouter.post(\"/bulk-delete\", async (req, res) => {\n\ttry {\n\t\tconst { ids } = req.body;\n\t\tconst files = await File.find({ _id: { $in: ids } });\n\n\t\tfiles.forEach((file) => {\n\t\t\tfs.unlinkSync(file.path); // Delete file from filesystem\n\t\t});\n\n\t\tawait File.deleteMany({ _id: { $in: ids } });\n\n\t\tres.json({ message: \"Files deleted\" });\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n});\n\nmodule.exports = router;\n"],"mappings":"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","ignoreList":[]}