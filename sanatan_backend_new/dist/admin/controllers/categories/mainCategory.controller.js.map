{"version":3,"file":"mainCategory.controller.js","names":["default","mongoose","require","Category","asyncHandler","exports","getAllCategories","req","res","categories","aggregate","$addFields","date","$ifNull","linercolor","json","err","console","error","status","message","getCategoriesByPage","$match","CategoryIn","params","categoryin","FindCategory","type","query","aggregationPipeline","linearcolor","$lookup","from","localField","foreignField","as","pipeline","innercategoriesCount","$size","subcategoriesCount","$sum","$facet","totals","$group","_id","published","$cond","$eq","draft","all","$project","activeCategory","Status","Name","Icon","publish","Colorleft","Colorright","splice","result","totalActive","totalDraft","getCategoryById","id","Types","ObjectId","isValid","category","length","getCategoryByType","find","createCategory","body","existingCategory","findOne","newCategory","save","updateCategory","findById","set","updatedCategory","deleteCategory","findByIdAndDelete","getActiveCategories","getDraftCategories","getTrashCategories","isTrash"],"sources":["../../../../src/admin/controllers/categories/mainCategory.controller.js"],"sourcesContent":["// categoryController.js\n\nconst { default: mongoose } = require(\"mongoose\");\nconst Category = require(\"../../models/category/mainCategory.model\");\nconst asyncHandler = require(\"../../utils/asyncHandler\");\n\n// Get all categories\nexports.getAllCategories = async (req, res) => {\n\ttry {\n\t\tconst categories = await Category.aggregate([\n\t\t\t{\n\t\t\t\t$addFields: {\n\t\t\t\t\tdate: { $ifNull: [\"$date\", \"$createdAt\"] },\n\t\t\t\t\tlinercolor: [\"$Colorleft\", \"$Colorright\"],\n\t\t\t\t},\n\t\t\t},\n\t\t]);\n\t\tres.json(categories);\n\t} catch (err) {\n\t\tconsole.error(\"Error fetching categories:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get categories by page\nexports.getCategoriesByPage = async (req, res) => {\n\ttry {\n\t\tconst categories = await Category.aggregate([\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tCategoryIn: req.params.categoryin,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$addFields: {\n\t\t\t\t\tdate: { $ifNull: [\"$date\", \"$createdAt\"] },\n\t\t\t\t},\n\t\t\t},\n\t\t]);\n\t\tres.json(categories);\n\t} catch (err) {\n\t\tconsole.error(\"Error fetching categories by page:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Find categories by type or get all categories\nexports.FindCategory = asyncHandler(async (req, res) => {\n\tconst type = req.query.type || \"\";\n\n\ttry {\n\t\tconst aggregationPipeline = [\n\t\t\t{\n\t\t\t\t$addFields: {\n\t\t\t\t\tlinearcolor: [\"$Colorleft\", \"$Colorright\"],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$lookup: {\n\t\t\t\t\tfrom: \"subcategories\",\n\t\t\t\t\tlocalField: \"_id\",\n\t\t\t\t\tforeignField: \"Parent\",\n\t\t\t\t\tas: \"subcategories\",\n\t\t\t\t\tpipeline: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$lookup: {\n\t\t\t\t\t\t\t\tfrom: \"innercategories\",\n\t\t\t\t\t\t\t\tlocalField: \"_id\",\n\t\t\t\t\t\t\t\tforeignField: \"Parent\",\n\t\t\t\t\t\t\t\tas: \"innercategories\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$addFields: {\n\t\t\t\t\t\t\t\tinnercategoriesCount: { $size: \"$innercategories\" },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$addFields: {\n\t\t\t\t\tsubcategoriesCount: { $size: \"$subcategories\" },\n\t\t\t\t\tinnercategoriesCount: { $sum: \"$subcategories.innercategories\" },\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$facet: {\n\t\t\t\t\ttotals: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$group: {\n\t\t\t\t\t\t\t\t_id: null,\n\t\t\t\t\t\t\t\tpublished: {\n\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t$cond: [{ $eq: [\"$Status\", \"STATUS_ACTIVE\"] }, 1, 0],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdraft: {\n\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t$cond: [{ $eq: [\"$Status\", \"STATUS_INACTIVE\"] }, 1, 0],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tall: { $sum: 1 },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$project: { _id: 0, published: 1, draft: 1, all: 1 },\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tactiveCategory: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$project: {\n\t\t\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t\t\tStatus: 1,\n\t\t\t\t\t\t\t\tName: 1,\n\t\t\t\t\t\t\t\tIcon: 1,\n\t\t\t\t\t\t\t\tpublish: { $ifNull: [\"$publish\", \"$createdAt\"] },\n\t\t\t\t\t\t\t\tColorleft: 1,\n\t\t\t\t\t\t\t\tColorright: 1,\n\t\t\t\t\t\t\t\tCategoryIn: 1,\n\t\t\t\t\t\t\t\tlinearcolor: 1,\n\t\t\t\t\t\t\t\tsubcategoriesCount: 1,\n\t\t\t\t\t\t\t\tinnercategoriesCount: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\tif (type !== \"\") {\n\t\t\taggregationPipeline.splice(0, 0, {\n\t\t\t\t$match: { Status: type },\n\t\t\t});\n\t\t}\n\n\t\tconst result = await Category.aggregate(aggregationPipeline);\n\t\tres.json({\n\t\t\ttotals: result[0].totals[0] || { totalActive: 0, totalDraft: 0 },\n\t\t\tactiveCategory: result[0].activeCategory,\n\t\t});\n\t} catch (err) {\n\t\tconsole.error(\"Error finding categories:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n});\n\n// Get category by ID\nexports.getCategoryById = async (req, res) => {\n\tconst { id } = req.params;\n\n\t// Validate if the ID is a valid ObjectId\n\tif (!mongoose.Types.ObjectId.isValid(id)) {\n\t\treturn res.status(400).json({ message: \"Invalid category ID\" });\n\t}\n\n\ttry {\n\t\tconst category = await Category.aggregate([\n\t\t\t{\n\t\t\t\t$match: { _id: new mongoose.Types.ObjectId(id) },\n\t\t\t},\n\t\t\t{\n\t\t\t\t$addFields: {\n\t\t\t\t\tpublish: { $ifNull: [\"$publish\", \"$createdAt\"] },\n\t\t\t\t},\n\t\t\t},\n\t\t]);\n\n\t\tif (!category || category.length === 0) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\t\tres.json(category[0]);\n\t} catch (err) {\n\t\tconsole.error(\"Error fetching category by ID:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get category by Type\nexports.getCategoryByType = async (req, res) => {\n\ttry {\n\t\tconst category = await Category.find({ type: req.params.type });\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\t\tres.json(category);\n\t} catch (err) {\n\t\tconsole.error(\"Error fetching category by type:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Create a new category\nexports.createCategory = async (req, res) => {\n\tconst { Name } = req.body;\n\n\ttry {\n\t\tconst existingCategory = await Category.findOne({ Name });\n\t\tif (existingCategory) {\n\t\t\treturn res.status(400).json({ message: \"Category already exists\" });\n\t\t}\n\n\t\tconst category = new Category(req.body);\n\t\tconst newCategory = await category.save();\n\t\tres.status(200).json(newCategory);\n\t} catch (err) {\n\t\tconsole.error(\"Error creating category:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Update category by ID\nexports.updateCategory = async (req, res) => {\n\tconst { id } = req.params;\n\n\tif (!mongoose.Types.ObjectId.isValid(id)) {\n\t\treturn res.status(400).json({ message: \"Invalid category ID\" });\n\t}\n\n\ttry {\n\t\tconst category = await Category.findById(id);\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\n\t\tcategory.set(req.body);\n\t\tconst updatedCategory = await category.save();\n\t\tres.json(updatedCategory);\n\t} catch (err) {\n\t\tconsole.error(\"Error updating category:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Delete category by ID\nexports.deleteCategory = async (req, res) => {\n\tconst { id } = req.params;\n\n\tif (!mongoose.Types.ObjectId.isValid(id)) {\n\t\treturn res.status(400).json({ message: \"Invalid category ID\" });\n\t}\n\n\ttry {\n\t\tconst category = await Category.findByIdAndDelete(id);\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\n\t\tres.json({ message: \"Category deleted successfully\" });\n\t} catch (err) {\n\t\tconsole.error(\"Error deleting category:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get active categories\nexports.getActiveCategories = async (req, res) => {\n\ttry {\n\t\tconst categories = await Category.aggregate([\n\t\t\t{\n\t\t\t\t$match: { Status: \"STATUS_ACTIVE\" },\n\t\t\t},\n\t\t\t{\n\t\t\t\t$addFields: {\n\t\t\t\t\tdate: { $ifNull: [\"$date\", \"$createdAt\"] },\n\t\t\t\t},\n\t\t\t},\n\t\t]);\n\t\tif (!categories || categories.length === 0) {\n\t\t\treturn res.status(404).json({ message: \"No active categories found\" });\n\t\t}\n\t\tres.json(categories);\n\t} catch (err) {\n\t\tconsole.error(\"Error fetching active categories:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get draft categories\nexports.getDraftCategories = async (req, res) => {\n\ttry {\n\t\tconst categories = await Category.find({ Status: \"STATUS_INACTIVE\" });\n\t\tif (!categories || categories.length === 0) {\n\t\t\treturn res.status(404).json({ message: \"No draft categories found\" });\n\t\t}\n\t\tres.json(categories);\n\t} catch (err) {\n\t\tconsole.error(\"Error fetching draft categories:\", err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get trash categories\nexports.getTrashCategories = async (req, res) => {\n\ttry {\n\t\tconst categories = await Category.find({ isTrash: true });\n\t\tif (!categories || categories.length === 0) {\n\t\t\treturn res.status(404).json({ message: \"No trashed categories found\" });\n\t\t}\n\t\tres.json(categories);\n\t} catch (err) {\n\t\tconsole\n\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n"],"mappings":"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","ignoreList":[]}