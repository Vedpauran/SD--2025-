{"version":3,"file":"subCategory.controller.js","names":["Category","require","asyncHandler","mongoose","exports","getAllCategories","req","res","categories","find","Parent","params","id","populate","console","log","json","err","status","message","FindCategory","type","query","result","aggregate","$match","Types","ObjectId","$facet","totals","$group","_id","published","$sum","$cond","$eq","draft","all","$project","activeCategory","Status","Name","Icon","publish","$ifNull","Colorleft","Colorright","totalActive","totalDraft","getCategoryById","category","$addFields","getCategoryByType","createCategory","existingCategory","findOne","body","newCategory","save","updateCategory","findById","set","updatedCategory","deleteCategory","findByIdAndDelete","getActiveCategories","getDraftCategories","getTrashCategories","isTrash"],"sources":["../../../../src/admin/controllers/categories/subCategory.controller.js"],"sourcesContent":["// categoryController.js\n\nconst Category = require(\"../../models/category/subCategory.model\");\nconst asyncHandler = require(\"../../utils/asyncHandler\");\nconst mongoose = require(\"mongoose\");\n// Get all categories\nexports.getAllCategories = async (req, res) => {\n\ttry {\n\t\tconst categories = await Category.find({ Parent: req.params.id }).populate(\"Maincategory\");\n\t\tconsole.log(\"category\", categories);\n\n\t\tres.json(categories);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\nexports.FindCategory = asyncHandler(async (req, res) => {\n\tconst type = req.query.type;\n\tconst id = req.params.id;\n\n\ttry {\n\t\tif (type === \"\") {\n\t\t\tconst result = await Category.aggregate([\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\tParent: new mongoose.Types.ObjectId(id),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$facet: {\n\t\t\t\t\t\ttotals: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$group: {\n\t\t\t\t\t\t\t\t\t_id: null,\n\t\t\t\t\t\t\t\t\tpublished: {\n\t\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t\t$cond: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ $eq: [\"$Status\", \"STATUS_ACTIVE\"] },\n\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdraft: {\n\t\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t\t$cond: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ $eq: [\"$Status\", \"STATUS_INACTIVE\"] },\n\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tall: { $sum: 1 },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$project: {\n\t\t\t\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\t\t\t\tpublished: 1,\n\t\t\t\t\t\t\t\t\tdraft: 1,\n\t\t\t\t\t\t\t\t\tall: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tactiveCategory: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$project: {\n\t\t\t\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t\t\t\tStatus: 1,\n\t\t\t\t\t\t\t\t\tName: 1,\n\t\t\t\t\t\t\t\t\tIcon: 1,\n\t\t\t\t\t\t\t\t\tpublish: {\n\t\t\t\t\t\t\t\t\t\t$ifNull: [\"$publish\", \"$createdAt\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tColorleft: 1,\n\t\t\t\t\t\t\t\t\tColorright: 1,\n\t\t\t\t\t\t\t\t\tParent: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]);\n\t\t\tres.json({\n\t\t\t\ttotals: result[0].totals[0] || {\n\t\t\t\t\ttotalActive: 0,\n\t\t\t\t\ttotalDraft: 0,\n\t\t\t\t},\n\t\t\t\tactiveCategory: result[0].activeCategory,\n\t\t\t});\n\t\t} else {\n\t\t\tconst result = await Category.aggregate([\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\tParent: new mongoose.Types.ObjectId(id),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$facet: {\n\t\t\t\t\t\ttotals: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$group: {\n\t\t\t\t\t\t\t\t\t_id: null,\n\t\t\t\t\t\t\t\t\tpublished: {\n\t\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t\t$cond: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ $eq: [\"$Status\", \"STATUS_ACTIVE\"] },\n\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdraft: {\n\t\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t\t$cond: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ $eq: [\"$Status\", \"STATUS_INACTIVE\"] },\n\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tall: { $sum: 1 },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$project: {\n\t\t\t\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\t\t\t\tpublished: 1,\n\t\t\t\t\t\t\t\t\tdraft: 1,\n\t\t\t\t\t\t\t\t\tall: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tactiveCategory: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$match: {\n\t\t\t\t\t\t\t\t\tStatus: type,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$project: {\n\t\t\t\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t\t\t\tStatus: 1,\n\t\t\t\t\t\t\t\t\tName: 1,\n\t\t\t\t\t\t\t\t\tIcon: 1,\n\t\t\t\t\t\t\t\t\tpublish: {\n\t\t\t\t\t\t\t\t\t\t$ifNull: [\"$publish\", \"$createdAt\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tColorleft: 1,\n\t\t\t\t\t\t\t\t\tColorright: 1,\n\t\t\t\t\t\t\t\t\tParent: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]);\n\t\t\tres.json({\n\t\t\t\ttotals: result[0].totals[0] || {\n\t\t\t\t\ttotalActive: 0,\n\t\t\t\t\ttotalDraft: 0,\n\t\t\t\t},\n\t\t\t\tactiveCategory: result[0].activeCategory,\n\t\t\t});\n\t\t}\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n});\n// Get category by ID\nexports.getCategoryById = async (req, res) => {\n\ttry {\n\t\tconst category = await Category.aggregate([\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\t_id: new mongoose.Types.ObjectId(req.params.id),\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$addFields: {\n\t\t\t\t\tpublish: {\n\t\t\t\t\t\t$ifNull: [\"$publish\", \"$createdAt\"],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t]);\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\t\tres.json(category[0]);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n// Get category by Type\nexports.getCategoryByType = async (req, res) => {\n\ttry {\n\t\tconst category = await Category.find({ type: req.params.type });\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\t\tres.json(category);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n// Create a new category\nexports.createCategory = async (req, res) => {\n\tconst existingCategory = await Category.findOne({\n\t\tName: req.body.Name,\n\t});\n\tif (existingCategory) {\n\t\treturn res\n\t\t\t.status(400)\n\t\t\t.json({ message: \"Category already exists\" });\n\t}\n\tconst category = new Category(req.body);\n\n\ttry {\n\t\tconst newCategory = await category.save();\n\t\tres.status(200).json(newCategory);\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Update category by ID\nexports.updateCategory = async (req, res) => {\n\ttry {\n\t\tconst category = await Category.findById(req.params.id);\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\n\t\tcategory.set(req.body);\n\t\tconst updatedCategory = await category.save();\n\t\tres.json(updatedCategory);\n\t} catch (err) {\n\t\tres.status(400).json({ message: err.message });\n\t}\n};\n\n// Delete category by ID\nexports.deleteCategory = async (req, res) => {\n\ttry {\n\t\tconst category = await Category.findByIdAndDelete(req.params.id);\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\n\t\tres.json({ message: \"Category deleted successfully\" });\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get categories\nexports.getActiveCategories = async (req, res) => {\n\ttry {\n\t\tconst category = await Category.find({ status: \"STATUS_ACTIVE\" });\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\t\tres.json(category);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get categories\nexports.getDraftCategories = async (req, res) => {\n\ttry {\n\t\tconst category = await Category.find({\n\t\t\tstatus: \"STATUS_INACTIVE\",\n\t\t});\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\t\tres.json(category);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get categories\nexports.getTrashCategories = async (req, res) => {\n\ttry {\n\t\tconst category = await Category.find({ isTrash: true });\n\t\tif (!category) {\n\t\t\treturn res.status(404).json({ message: \"Category not found\" });\n\t\t}\n\t\tres.json(category);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n"],"mappings":"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","ignoreList":[]}