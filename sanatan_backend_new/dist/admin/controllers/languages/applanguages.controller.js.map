{"version":3,"file":"applanguages.controller.js","names":["asyncHandler","require","Language","exports","getAllLanguages","req","res","languages","aggregate","$addFields","Date","$ifNull","json","err","status","message","FindLanguages","type","query","result","$facet","totals","$group","_id","published","$sum","$cond","$eq","draft","all","$project","activeLanguages","Status","adminName","Name","Icon","totalActive","totalDraft","$match","getLanguageById","language","findById","params","id","getLanguageByLanguage","Languages","findOne","error","createLanguage","body","newLanguage","save","updateLanguage","set","updatedLanguage","deleteLanguage","findByIdAndDelete","deleteLanguages","ids","deleteMany","$in","getActiveLanguages","find","getDraftLanguages","getTrashLanguages","isTrash"],"sources":["../../../../src/admin/controllers/languages/applanguages.controller.js"],"sourcesContent":["// languageController.js\nconst asyncHandler = require(\"../../utils/asyncHandler\");\nconst Language = require(\"../../models/applanguage\");\n// Get all languages\nexports.getAllLanguages = async (req, res) => {\n\ttry {\n\t\tconst languages = await Language.aggregate([\n\t\t\t{\n\t\t\t\t$addFields: {\n\t\t\t\t\tDate: {\n\t\t\t\t\t\t$ifNull: [\"$Date\", \"$createdAt\"],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t]);\n\t\tres.json(languages);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\nexports.FindLanguages = asyncHandler(async (req, res) => {\n\tconst type = req.query.type;\n\n\ttry {\n\t\tif (type === \"\") {\n\t\t\tconst result = await Language.aggregate([\n\t\t\t\t{\n\t\t\t\t\t$facet: {\n\t\t\t\t\t\ttotals: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$group: {\n\t\t\t\t\t\t\t\t\t_id: null,\n\t\t\t\t\t\t\t\t\tpublished: {\n\t\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t\t$cond: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ $eq: [\"$Status\", \"STATUS_ACTIVE\"] },\n\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdraft: {\n\t\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t\t$cond: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ $eq: [\"$Status\", \"STATUS_INACTIVE\"] },\n\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tall: { $sum: 1 },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$project: {\n\t\t\t\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\t\t\t\tpublished: 1,\n\t\t\t\t\t\t\t\t\tdraft: 1,\n\t\t\t\t\t\t\t\t\tall: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tactiveLanguages: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$project: {\n\t\t\t\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t\t\t\tStatus: 1,\n\t\t\t\t\t\t\t\t\tadminName: 1,\n\t\t\t\t\t\t\t\t\tName: 1,\n\t\t\t\t\t\t\t\t\tIcon: 1,\n\t\t\t\t\t\t\t\t\tDate: {\n\t\t\t\t\t\t\t\t\t\t$ifNull: [\"$Date\", \"$createdAt\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]);\n\t\t\tres.json({\n\t\t\t\ttotals: result[0].totals[0] || {\n\t\t\t\t\ttotalActive: 0,\n\t\t\t\t\ttotalDraft: 0,\n\t\t\t\t},\n\t\t\t\tactiveLanguages: result[0].activeLanguages,\n\t\t\t});\n\t\t} else {\n\t\t\tconst result = await Language.aggregate([\n\t\t\t\t{\n\t\t\t\t\t$facet: {\n\t\t\t\t\t\ttotals: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$group: {\n\t\t\t\t\t\t\t\t\t_id: null,\n\t\t\t\t\t\t\t\t\tpublished: {\n\t\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t\t$cond: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ $eq: [\"$Status\", \"STATUS_ACTIVE\"] },\n\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tdraft: {\n\t\t\t\t\t\t\t\t\t\t$sum: {\n\t\t\t\t\t\t\t\t\t\t\t$cond: [\n\t\t\t\t\t\t\t\t\t\t\t\t{ $eq: [\"$Status\", \"STATUS_INACTIVE\"] },\n\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tall: { $sum: 1 },\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$project: {\n\t\t\t\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\t\t\t\tpublished: 1,\n\t\t\t\t\t\t\t\t\tdraft: 1,\n\t\t\t\t\t\t\t\t\tall: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tactiveLanguages: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$match: { Status: type },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$project: {\n\t\t\t\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t\t\t\tStatus: 1,\n\t\t\t\t\t\t\t\t\tadminName: 1,\n\t\t\t\t\t\t\t\t\tName: 1,\n\t\t\t\t\t\t\t\t\tIcon: 1,\n\t\t\t\t\t\t\t\t\tDate: {\n\t\t\t\t\t\t\t\t\t\t$ifNull: [\"$Date\", \"$createdAt\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t]);\n\t\t\tres.json({\n\t\t\t\ttotals: result[0].totals[0] || {\n\t\t\t\t\ttotalActive: 0,\n\t\t\t\t\ttotalDraft: 0,\n\t\t\t\t},\n\t\t\t\tactiveLanguages: result[0].activeLanguages,\n\t\t\t});\n\t\t}\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n});\n// Get language by ID\nexports.getLanguageById = async (req, res) => {\n\ttry {\n\t\tconst language = await Language.findById(req.params.id);\n\t\tif (!language) {\n\t\t\treturn res.status(404).json({ message: \"Language not found\" });\n\t\t}\n\t\tres.json(language);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\nexports.getLanguageByLanguage = async (req, res) => {\n\ttry {\n\t\tconst Languages = await Language.findOne({\n\t\t\tLanguage: req.params.id,\n\t\t\tLanguage: req.params.language,\n\t\t});\n\t\tif (!Languages) {\n\t\t\treturn res.status(201).json({ message: \"Not Found\" });\n\t\t}\n\t\tres.Languages = Languages;\n\t\tres.status(200).json(res.Languages);\n\t} catch (error) {\n\t\treturn res.status(500).json({ message: error.message });\n\t}\n};\n// Create a new language\nexports.createLanguage = async (req, res) => {\n\tconst language = new Language(req.body);\n\n\ttry {\n\t\tconst newLanguage = await language.save();\n\t\tres.status(201).json(newLanguage);\n\t} catch (err) {\n\t\tres.status(400).json({ message: err.message });\n\t}\n};\n\n// Update language by ID\nexports.updateLanguage = async (req, res) => {\n\ttry {\n\t\tconst language = await Language.findById(req.params.id);\n\t\tif (!language) {\n\t\t\treturn res.status(404).json({ message: \"Language not found\" });\n\t\t}\n\n\t\tlanguage.set(req.body);\n\t\tconst updatedLanguage = await language.save();\n\t\tres.json(updatedLanguage);\n\t} catch (err) {\n\t\tres.status(400).json({ message: err.message });\n\t}\n};\n\n// Delete language by ID\nexports.deleteLanguage = async (req, res) => {\n\ttry {\n\t\tconst language = await Language.findById(req.params.id);\n\n\t\tif (!language) {\n\t\t\treturn res.status(404).json({ message: \"Language not found\" });\n\t\t}\n\n\t\tawait Language.findByIdAndDelete(req.params.id);\n\n\t\tres.json({ message: \"Language deleted successfully\" });\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Delete Multiple languages by ID\nexports.deleteLanguages = async (req, res) => {\n\ttry {\n\t\tvar ids = req.body;\n\n\t\tawait Language.deleteMany({ _id: { $in: ids } });\n\n\t\tres.json({ message: \"Languages deleted successfully\" });\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get languages\nexports.getActiveLanguages = async (req, res) => {\n\ttry {\n\t\tconst language = await Language.find({\n\t\t\tstatus: \"STATUS_ACTIVE\",\n\t\t});\n\t\tif (!language) {\n\t\t\treturn res.status(404).json({ message: \"Language not found\" });\n\t\t}\n\t\tres.json(language);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get languages\nexports.getDraftLanguages = async (req, res) => {\n\ttry {\n\t\tconst language = await Language.find({\n\t\t\tstatus: \"STATUS_INACTIVE\",\n\t\t});\n\t\tif (!language) {\n\t\t\treturn res.status(404).json({ message: \"Language not found\" });\n\t\t}\n\t\tres.json(language);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n\n// Get languages\nexports.getTrashLanguages = async (req, res) => {\n\ttry {\n\t\tconst language = await Language.find({ isTrash: true });\n\t\tif (!language) {\n\t\t\treturn res.status(404).json({ message: \"Language not found\" });\n\t\t}\n\t\tres.json(language);\n\t} catch (err) {\n\t\tres.status(500).json({ message: err.message });\n\t}\n};\n"],"mappings":"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","ignoreList":[]}